{% extends 'layout.twig' %}

{% block body %}
	<div id="vote-wrapper" class="vote-wrapper" style="background-color: #08415c">
		<h1 id="title"></h1>
		<div class="container">
			<pre id="credits-list">{{ template }}</p>
<!-- 		<button id="start" onclick="startVoting()">Start</button>
			<button id="end" onclick="endVoting()">End</button>
			<button id="reset" onclick="location.reload()">Reset</button> -->
		</div>
	</div>
	<script>
		var isCredits = false;
		var client = null;
		var chatters = {};

		function startCrediting() {
			chatters = {};
			isCredits = true;
			$("#credits-list").text( "" );
			client.action( "#{{ username }}", "Credits Generation Has Begun!" );
		}

		function endCrediting() {
			isCredits = false;
			client.action( "#{{ username }}", "Credits Generation Has Ended" );
			var totalChatters = 0;
			for( var chatter in chatters ) {
				totalChatters++;
			}
			client.action( "#{{ username }}", ( "There are " + totalChatters + " people in the credits!" ) );
		}

		$( document ).ready(function() {
			var options = {
				options: {
					debug: false
				},
				connection: {
					reconnect: true,
				},
				identity: {
					username: "{{ username }}",
				    password: "{{ oauth }}"
				},
				channels: ["#{{ username }}"]
			};

			client = new tmi.client(options);

			// Connect the client to the server..
			client.connect();

			client.on("chat", function (channel, userstate, message, self) {
				var displayName = userstate["display-name"];
				chatters[ displayName ] = chatters[ displayName ] ? chatters[ displayName ] + 1 : 0;
				var creditList = [];
				for( var chatter in chatters ) {
					if( chatter != "StreamElements" ) {
						creditList.push( chatter );
					}
				}
				$("#credit-names").text( creditList.join(", ") )

				// if( userstate[ "username" ] == "{{ username }}" || userstate[ "mod" ] ) {
				// 	if( !isCredits && ( message.startsWith( "!startvote" ) || message.startsWith( "!sv" ) ) ) {
				// 		var topic = message.replace("!sv", "").replace("!startvote", "").trim() || "No Topic Specified";
				// 		startVoting( topic );
				// 		return;
				// 	}
				// 	if( isVoteRunning && ( message.startsWith( "!endvote" ) || message.startsWith( "!ev" ) ) ) {
				// 		endVoting();
				// 		return;
				// 	}
				// }

				// // Vote must be running and only accept chats and whispers
				// if( isCredits && userstate["message-type"] != "action" ) {
				// 	var isVote = false;
				// 	var parts = message.replace(/[.,\/#!$%\^&\*;:{}=\-_`~()]/g,"").split(' ');
				// 	parts.forEach( ( part ) => {
				// 		if( part.toLowerCase() == "yes" ) {
				// 			votes[ userstate[ "username" ] ] = "yes";
				// 			isVote = true;
				// 		}
				// 		else if( part.toLowerCase() == "no" ) {
				// 			votes[ userstate[ "username" ] ] = "no";
				// 			isVote = true;
				// 		}
				// 	});

				// 	if( isVote ) {
				// 		var totalCount = 0, yesCount = 0, noCount = 0;
				// 		for( var voter in votes ) {
				// 			totalCount++;
				// 			if( votes[ voter ] == "yes" ) {
				// 				yesCount++;
				// 			}
				// 			else {
				// 				noCount++;
				// 			}
				// 		}
				// 		console.log("YES: " + yesCount + " (" + Math.floor( yesCount / totalCount * 100 ) + "%)" + " NO: " + noCount + " (" + Math.floor( noCount / totalCount * 100 ) + "%)");
				// 		$("#yes-count").text(yesCount + " (" + Math.floor( yesCount / totalCount * 100 ) + "%)");
				// 		$("#no-count").text(noCount + " (" + Math.floor( noCount / totalCount * 100 ) + "%)");
				// 	}
				// }
				console.log( userstate["display-name"] + ": " + message );
			});
		});
	</script>
{% endblock %}
